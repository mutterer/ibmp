package src.org.micromanager.serialPortHandling;

import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;

import java.awt.GridLayout;

import net.miginfocom.swing.MigLayout;

import javax.swing.JLabel;
import javax.swing.JComboBox;

import src.org.micromanager.plugin.ScriptInterfaceWrapper;

import java.awt.event.ItemListener;
import java.awt.event.ItemEvent;

public class InputMapperWindow extends JFrame {

	private JPanel contentPane;
	private JComboBox[] deviceBoxAnal;
	private JComboBox[] propertyBoxAnal;
	private JPanel panel;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					InputMapperWindow frame = new InputMapperWindow();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the frame.
	 */
	public InputMapperWindow() {
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 600, 500);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));
		setContentPane(contentPane);
		contentPane.setLayout(new GridLayout(0, 1, 0, 0));
		
		panel = new JPanel();
		contentPane.add(panel);
		panel.setLayout(new MigLayout("", "[][82.00,grow][grow]", "[][24.00][24.00][24.00][24.00][24.00][24.00][24.00][24.00][24.00][24.00][24.00][24.00][24.00][24.00][24.00][24.00][24.00]"));
		
		JLabel lblA5 = new JLabel("A5");
		panel.add(lblA5, "cell 0 1,alignx trailing");
		
		JLabel lblA4 = new JLabel("A4");
		panel.add(lblA4, "cell 0 2,alignx trailing");
		
		JLabel lblA3 = new JLabel("A3");
		panel.add(lblA3, "cell 0 3,alignx trailing");
		
		JLabel lblA2 = new JLabel("A2");
		panel.add(lblA2, "cell 0 4,alignx trailing");
		
		JLabel lblA1 = new JLabel("A1");
		panel.add(lblA1, "cell 0 5,alignx trailing");
		
		JLabel lblA0 = new JLabel("A0");
		panel.add(lblA0, "cell 0 6,alignx trailing");
		
		String[] deviceNames;
		try {
			deviceNames = ScriptInterfaceWrapper.getDeviceNames();
		} catch (Exception e) {
			deviceNames = new String[]{};
		}
		deviceBoxAnal = new JComboBox[6];
		propertyBoxAnal = new JComboBox[6];
		for(int i = 0; i< deviceBoxAnal.length; i++){
			propertyBoxAnal[i] = new JComboBox();
			deviceBoxAnal[i] = new JComboBox(deviceNames);
			int rownumber = (i*-1)+deviceBoxAnal.length+1;
			deviceBoxAnal[i].addItemListener(new ItemListener() {
				public void itemStateChanged(ItemEvent item) {
					JComboBox box = (JComboBox)item.getSource();
					String device = (String)box.getSelectedItem();
					String[] props;
					try {
						props = ScriptInterfaceWrapper.getDevicePropertyNames(device);
					} catch (Exception e) {
						props = new String[]{};
					}
					int index = 0;
					for(int j = 0; j < deviceBoxAnal.length; j++){
						if(box.equals(deviceBoxAnal[j])){
							index = j;
						}
					}
					//TODO filter non number properties out of props
					int rownumber = (index*-1)+propertyBoxAnal.length+1;
					panel.remove(propertyBoxAnal[index]);
					propertyBoxAnal[index] = new JComboBox(props);
					panel.add(propertyBoxAnal[index], "cell 2 "+rownumber+",growx");
					panel.repaint();
				}
			});
			panel.add(deviceBoxAnal[i], "cell 1 "+rownumber+",growx");
			panel.add(propertyBoxAnal[i], "cell 2 "+rownumber+",growx");
		}
		
		JLabel[] pinLbl = new JLabel[10];
		for(int i = 0; i <pinLbl.length; i++){
			pinLbl[i] = new JLabel("Pin" + i);
			int rownumber = (i*-1) + pinLbl.length +8;
			panel.add(pinLbl[i], "cell 0 "+ rownumber);
		}
		for(int i = 8 ; i<= 17; i++){
		}
	}
}
